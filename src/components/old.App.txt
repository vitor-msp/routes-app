import React, { useEffect } from 'react';
import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';
import { getGraphRequest, postGraphRequest } from '../store/ducks/graph/graph.actions';
import { Graph, GraphState } from '../store/ducks/graph/graph.types';
import { getMinRouteRequest } from '../store/ducks/path/path.actions';
import { getRoutesRequest } from '../store/ducks/routes/routes.actions';
// import { RootState } from '../store/ducks/rootReducer';
import { AppDispatch, RootState } from '../store/store';

function App() {
  const dispatch: AppDispatch = useDispatch()
  const selector = useSelector((state: RootState) => state.graph)
  const routes = useSelector((state: RootState) => state.routes)
  const path = useSelector((state: RootState) => state.path)

  const graph: Graph = {
    id: 1,
    data: [
      {source: "A", target: "B", distance: 8},
      {source: "A", target: "B", distance: 8}
    ]
  }

  const post = async () => {
    await dispatch(postGraphRequest(graph))
  }
  const get = async () => {
    await dispatch(getGraphRequest(1))
  }
  const getR = async () => {
    await dispatch(getRoutesRequest({
      graphId: 1,
      town1: "A",
      town2: "B",
      maxStops: 2
    }))
  }
  const getM = async () => {
    await dispatch(getMinRouteRequest({
      graphId: 1,
      town1: "A",
      town2: "B",
    }))
  }

  useEffect(() => {
    // console.log(selector)
    // console.log(routes)
    console.log(path)
  },[selector, routes, path])
  
  return (
    <div>
      <p>hello</p>
      <button onClick={post}>post graph</button>
      <button onClick={get}>get graph </button>
      <button onClick={getR}>get routes </button>
      <button onClick={getM}>get min route </button>
    </div>
  );
}

export default App;
